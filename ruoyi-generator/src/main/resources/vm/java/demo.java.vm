package ${packageName}.controller;

import java.util.List;

import com.rain.shiro.commons.core.result.Result;
import com.rain.shiro.commons.utils.sign.Md5Utils;
import com.rain.shiro.commons.utils.ShiroUtils;
import com.rain.shiro.project.entity.SysCategory;
import com.rain.shiro.project.service.SysCategoryService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import com.rain.shiro.commons.core.base.BaseController;
import com.rain.shiro.commons.utils.page.TableDataInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@Api(tags = "${functionName}接口")
@RestController
@RequestMapping("/${businessName}")
public class ${ClassName}Controller extends BaseController {

    @Autowired
    private ${ClassName}Service ${className}Service;

    @ApiOperation(value = "查询${functionName}列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageNum", value = "页码", defaultValue = "1", dataType = "int", paramType = "query"),
            @ApiImplicitParam(name = "pageSize", value = "页数", defaultValue = "10", dataType = "int", paramType = "query"),
            @ApiImplicitParam(name = "orderByColumn", value = "排序字段", dataType = "string", paramType = "query"),
            @ApiImplicitParam(name = "isAsc", value = "asc-升序, desc-降序", dataType = "string", paramType = "query")
    })
    @GetMapping("/list")
    public TableDataInfo list(${ClassName} ${className}) {
        startPage();
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return getDataTable(list);
    }

    @ApiOperation(value = "获取单个${functionName}")
    @ApiImplicitParam(name = "${pkColumn.javaField}", value = "分类ID", dataType = "int", paramType = "query", required = true)
    @GetMapping(value = "/getInfo")
    public Result getInfo(Long ${pkColumn.javaField}) {
        return success(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    @ApiOperation(value = "新增${businessName}")
    @PostMapping("/insert")
    public Result insert(@Validated @RequestBody ${ClassName} ${className}) {
//        if (!SysCategoryService.checkUserNameUnique(sysCategory)) {
//            return error("新增分类'" + sysCategory.getUserName() + "'失败，分类账号已存在");
//        }
        return isSuccess(${className}Service.insert${ClassName}(${className}));
    }

    @ApiOperation(value = "修改${businessName}")
    @PostMapping("/update")
    public Result update(@Validated @RequestBody ${ClassName} ${className}) {
        return isSuccess(${className}Service.update${ClassName}(${className}));
    }

    @ApiOperation(value = "批量删除${businessName}")
    @PostMapping("/batchDelete")
    public Result batchDelete(@PathVariable Long[] ${pkColumn.javaField}s) {
        return isSuccess(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }
}
